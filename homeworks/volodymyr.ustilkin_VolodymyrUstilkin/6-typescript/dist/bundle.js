(()=>{var e=document.querySelector("[data-score]"),t=document.querySelector("[data-cube]"),r=document.querySelector("[data-cube-score]"),n=document.querySelector("[data-key]"),i=document.querySelector("[data-progress-bar]");new(function(){function e(e,t,r,n,i){this.scoreElement=e,this.cubeScoreElement=t,this.keyElement=r,this.cubeElement=n,this.progressBarElement=i,this.score=100,this.currentKey="",this.interval=2e3,this.intervalId=0,this.intervalEventDelay=100,this.currentEventTime=0}return e.prototype.start=function(){this.subscribeOnKeyPress(),this.startKeysInterval(),this.generateKey()},e.prototype.startKeysInterval=function(){this.intervalId=window.setInterval(this.intervalEvent,this.intervalEventDelay,this)},e.prototype.intervalEvent=function(e){e.currentEventTime+=e.intervalEventDelay,e.changeProgressBar(),e.currentEventTime>e.interval&&(e.addScore(e.generateNumber(-10,-15)),e.resetEvent(),console.log("time failed"))},e.prototype.changeProgressBar=function(){this.interval;this.interval,this.progressBarElement.style.width=String(100-this.currentEventTime/this.interval*100)+"%",console.log(this.currentEventTime/this.interval)},e.prototype.setScore=function(e){this.scoreElement.innerHTML=e>=0?"+"+e.toString():e.toString(),e>200&&(alert("victory"),this.restartGame()),e<0&&(alert("loss"),this.restartGame())},e.prototype.restartGame=function(){this.scoreElement.innerHTML=this.score.toString(),this.cubeScoreElement.innerHTML="",window.clearInterval(this.intervalId)},e.prototype.setKey=function(e){if(e.toUpperCase()===n.innerHTML){var t=this.generateNumber(5,10);this.addScore(t)}else this.addScore(this.generateNumber(-20,-25));this.resetEvent()},e.prototype.resetEvent=function(){this.currentEventTime=0,this.generateKey()},e.prototype.addScore=function(e){var t=Number.parseInt(this.scoreElement.innerHTML);this.cubeScoreElement.innerHTML=e.toString(),this.setScore(t+e)},e.prototype.subscribeOnKeyPress=function(){var e=this;document.addEventListener("keypress",(function(t){e.setKey(t.key)}))},e.prototype.generateKey=function(){var e="A".charCodeAt(0),t="Z".charCodeAt(0),r=this.generateNumber(e,t);n.innerHTML=String.fromCharCode(r)},e.prototype.generateNumber=function(e,t){return Math.floor(Math.random()*Math.floor(t-e))+e},e}())(e,r,n,t,i).start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,