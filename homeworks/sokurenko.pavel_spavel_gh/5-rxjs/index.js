// const mainNode = document.querySelector('[data-main]');
// const headerTTTNode = document.querySelector('[data-heaader]');
const headerNode = document.querySelector('[data-heaader-content]');
const scrollNode = document.querySelector('[data-scroll]');

// headerNode.style.width = `${scrollNode.clientWidth}px`;
// mainNode.style.paddingTop = `${headerNode.offsetHeight + 1}px`;

// –î–∞ —É–∂, —Ç–∞ –µ—â–µ –∑–∞–¥–∞—á–∫–∞, –µ—Ö–µ—Ö—Ö–µ üòµ
function doLittleMagic(action) {
    switch (action) {
        case 'close':
            headerNode.style.top = '0px';
            headerNode.style.top = `${(headerNode.offsetHeight - 2) * -1}px`;
            // todo '- 2' -> '+ n'                              ‚òù
            // –æ–π –Ω–∞ —á—Ç–æ –∂–µ –≥–æ—Ç–æ–≤ —á–µ–ª–æ–≤–µ–∫ –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞...
            break;
        case 'open':
            headerNode.style.top = '0px';
            break;
        default:
            break;
    }
} doLittleMagic();
// headerTTTNode.classList.remove('header-content-sticky-top0');
// headerTTTNode.classList.add('header-content-sticky-top0');

//
// scrollNode.addEventListener('scroll', (e) => {
//     console.log(scrollNode.scrollTop);
//     // console.log(scrollNode.scrollTop);
// });
//

function whereScroll(oldY, newY) {
    return (newY > oldY ? 'down' : 'up');
}

const wayLength = 50;
let wayPointer = 'up';
let yPointer = 0;
let watch = false;
function makeTrackingStatus(command, newYPointer) {
    switch (command) {
        case true:
            watch = true;
            yPointer = newYPointer;
            break;
        case false:
            watch = false;
            break;
        default: break;
    }
}

const { fromEvent } = window.rxjs;
const {
    throttleTime, pairwise, distinctUntilChanged, map, tap, debounceTime,
} = window.rxjs.operators;

const scroll = fromEvent(scrollNode, 'scroll');

const opener = scroll.pipe(
    debounceTime(100),
    map(() => scrollNode.scrollTop),
    map((y) => y < 20),
);

opener.subscribe((event) => {
    if (event) {
        makeTrackingStatus(false);
        wayPointer = 'up';
        doLittleMagic('open');
        console.log('Yeah!');
    }
});

const scrollStream = scroll.pipe(
    throttleTime(80),
    map(() => scrollNode.scrollTop),
    map((y) => Math.round(y)),
    distinctUntilChanged(),
    pairwise(),

    tap(([oldY, newY]) => { // —Ç—Ä–∏–≥–µ—Ä –Ω–∞—á–∞–ª–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        if (wayPointer !== whereScroll(oldY, newY)) { // –µ—Å–ª–∏ –Ω–æ–≤–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        // ? –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –Ω–æ–≤—ã–º, –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–π–¥—ë–º –ø–æ –Ω–µ–º—É 50–ø–∫—Å
            if (watch === false) { // –µ—Å–ª–∏ –µ—â–µ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º
                makeTrackingStatus(true, newY);
            }
        }
    }),

    tap((oldY, newY) => { // –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –µ—Å–ª–∏ –¥–≤–∏–∂–∏–º—Å—è –∫–∞–∫ —Ä–∞–Ω—å—à–µ
        if (watch === true) {
            if (wayPointer === 'down') { // –µ—Å–ª–∏ –±–∞–∑–æ–≤–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–Ω–∏–∑
                if (newY > yPointer) { // –µ—Å–ª–∏ –º—ã –Ω–∏–∂–µ —Ç–æ—á–∫–∏
                    makeTrackingStatus(false);
                }
            } else if (wayPointer === 'up') { // –µ—Å–ª–∏ –±–∞–∑–æ–≤–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö
                if (newY < yPointer) { // –º—ã –≤—ã—à–µ —Ç–æ—á–∫–∏
                    makeTrackingStatus(false);
                }
            }
        }
    }),

    tap((oldY, newY) => {
        if (oldY > newY) {
            if (newY <= (oldY - newY)) {
                makeTrackingStatus(false);
                wayPointer = 'up';
                doLittleMagic('open');
                console.log('yeah!');
            }
        }
    }),

    tap(([oldY, newY]) => {
        if (watch === true) {
            if (Math.abs(yPointer - newY) > wayLength) { // –µ—Å–ª–∏ –ø—Ä–æ—à–ª–∏ –ø—É—Ç—å
                wayPointer = whereScroll(oldY, newY);
                // –æ—Ç–∫—Ä—ã–≤–∞–µ–º/–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ö–µ–∞–¥–µ—Ä
                doLittleMagic(wayPointer === 'down' ? 'close' : 'open');
                makeTrackingStatus(false);
            }
        }
    }),

    distinctUntilChanged(),
    tap((([oldY, newY]) => console.log(`oldY : ${oldY}\t\t–Ω–∞–ø—Ä : ${whereScroll(oldY, newY)}\nnewY : ${newY}    \t–æ—Ç—Å–ª–µ–∂ : ${watch}`))),
    map(([oldY, newY]) => whereScroll(oldY, newY)),
);

scrollStream.subscribe((/* event */) => {
    // todo: do pretty code
    // if (event === 'up') doLittleMagic('open');
    // if (event === 'down') doLittleMagic('close');
});
