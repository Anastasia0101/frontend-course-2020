{"version":3,"sources":["./src/app/mocks/index.ts","./src/environments/environment.ts","./src/app/mocks/vechicles.mock.ts","./src/app/services/car.service.ts","./src/app/directives/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pipes/car-link.pipe.ts","./src/app/pipes/info-car.pipe.ts","./src/app/directives/http-car.directive.ts","./src/app/services/index.ts","./src/app/pipes/index.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAiC;;;;;;;;;;;;;ACAjC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAA+B;AAE/B,MAAM,KAAK,GAAG,EAAE,CAAC;AACjB,IAAI,IAAI,GAAG,IAAI,CAAC;AAEhB,mCAAmC;AACnC,SAAS,cAAc;IACrB,IAAI,IAAI,CAAC,CAAC;IACV,0CAAU,CAAC,IAAI,CAAC,CAAC;IAEjB,OAAO;QACL,KAAK,EAAE,6CAAa,CAAC,KAAK,EAAE;QAC5B,IAAI,EAAE,6CAAa,CAAC,IAAI,EAAE;QAC1B,YAAY,EAAE,6CAAa,CAAC,YAAY,EAAE;QAC1C,KAAK,EAAE,6CAAa,CAAC,KAAK,EAAE;QAC5B,IAAI,EAAE,6CAAa,CAAC,IAAI,EAAE;QAC1B,OAAO,EAAE,6CAAa,CAAC,OAAO,EAAE;QAChC,GAAG,EAAE,6CAAa,CAAC,GAAG,EAAE;QAExB,IAAI,EAAE;YACJ,IAAI,EAAE,6CAAa,CAAC,OAAO,CAAC,0CAAU,CAAC,KAAK,EAAE,CAAC;YAC/C,QAAQ,EAAE,8CAAc,CAAC,QAAQ,EAAE;SACpC;QAED,IAAI,EAAE;YACJ,OAAO,EAAE,6CAAa,CAAC,OAAO,EAAE;YAChC,WAAW,EAAE,6CAAa,CAAC,WAAW,EAAE;YACxC,MAAM,EAAE,6CAAa,CAAC,MAAM,EAAE;YAC9B,YAAY,EAAE,6CAAa,CAAC,YAAY,EAAE;SAC3C;KACF,CAAC;AACJ,CAAC;AAEM,MAAM,aAAa,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;;;;;;;;;;;;;ACjC1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACL;AACC;AAEC;;AAKjC,MAAM,UAAU;IAErB,gBAAgB,CAAC;IAEjB,YAAY;QACV,OAAO,+CAAE,CAAC,oDAAa,CAAC,CAAC,IAAI,CAC3B,4DAAK,CAAC,IAAI,CAAC,CACZ,CAAC;IACN,CAAC;;oEARY,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;6FAEP,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE3C,MAAM,aAAa,GAAG;IAC3B,8DAAU;CACX,CAAC;AAEmC;;;;;;;;;;;;;ACLrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACA;;;;;;;;;ICD1C,4EAA0F;;;IAExF,wEACE;IAAA,uEACA;;IAAA,uEACE;IAAA,uDACF;IAAA,4DAAO;IACL,gEACF;IAAA,uDACE;;IAAA,gEACF;IAAA,uDACA;;IAAA,4DAAI;IACN,4DAAK;;;IATK,0DAA0B;IAA1B,iNAA0B;IAEhC,0DACF;IADE,2GACF;IAEA,0DACE;IADF,4JACE;IACF,0DACA;IADA,kNACA;;;IAVJ,qEACE;IAAA,6GACE;IAUJ,4DAAK;;;IAXC,0DAAwB;IAAxB,gFAAwB;;ADQvB,MAAM,YAAY;IAIvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAH1C,oBAAe,GAAY,KAAK,CAAC;QACjC,SAAI,GAAU,EAAE,CAAC;QAIjB,IAAI,CAAC,OAAO,EAAE,CAAC;IAEf,CAAC;IAEO,OAAO;QACb,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;aAC7B,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC;aAClD,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC;;wEAjBU,YAAY;4FAAZ,YAAY;QCXzB,qEACA;QAAA,wHAA4E;QAC5E,sGACE;;QAFW,0DAAuB;QAAvB,qFAAuB;QAChC,0DAAwB;QAAxB,sFAAwB;;6FDSf,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACT;AACN;AACH;AACA;AACI;AACqC;AACD;AACrB;;AAuBlD,MAAM,SAAS;;wFAAT,SAAS,cAHR,2DAAY;4IAGb,SAAS,mBALT,CAAC,GAAG,qDAAW,CAAC,YARlB;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,2FAAwB;YACxB,wEAAe;SAChB;mIAOU,SAAS,mBAnBlB,2DAAY;QACZ,kDAAW;QACX,sDAAU;QACV,kDAAW,aAIX,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,2FAAwB;QACxB,wEAAe;6FAQN,SAAS;cArBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kDAAW;oBACX,sDAAU;oBACV,kDAAW;iBACZ;gBAED,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,2FAAwB;oBACxB,wEAAe;iBAChB;gBAED,SAAS,EAAE,CAAC,GAAG,qDAAW,CAAC;gBAE3B,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAoD;;AAM7C,MAAM,WAAW;IAEtB,SAAS,CAAC,GAAQ;QAChB,OAAO,sCAAsC,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;IAChF,CAAC;;sEAJU,WAAW;wGAAX,WAAW;6FAAX,WAAW;cAHvB,kDAAI;eAAC;gBACJ,IAAI,EAAE,SAAS;aAChB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAoD;;AAO7C,MAAM,WAAW;IAEtB,SAAS,CAAC,GAAQ;QAChB,OAAO,GAAG,GAAG,CAAC,YAAY,MAAM,GAAG,CAAC,KAAK,MAAM,GAAG,CAAC,IAAI,GAAG;IAC5D,CAAC;;sEAJU,WAAW;wGAAX,WAAW;6FAAX,WAAW;cAJvB,kDAAI;eAAC;gBACJ,IAAI,EAAE,SAAS;aAChB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAqE;;AAM9D,MAAM,UAAU;IACrB,YAAoB,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;IAAG,CAAC;IAE3C,eAAe;QACb,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,KAAK,iBAAiB,EAAE;YACzE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;YAC1D,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM;SACxD;IACH,CAAC;;oEARU,UAAU;0FAAV,UAAU;6FAAV,UAAU;cAJtB,uDAAS;eAAC;gBACT,QAAQ,EAAE,QAAQ;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAA0C;AAEnC,MAAM,WAAW,GAAG;IACzB,uDAAU;CACX,CAAC;AAE4B;;;;;;;;;;;;;ACN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACA;AAEvC,MAAM,QAAQ,GAAG;IACxB,0DAAW;IACX,0DAAW;CACV,CAAC;AAE8B;AACA;;;;;;;;;;;;;ACThC;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["export * from './vechicles.mock';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import * as faker from 'faker';\n\nconst count = 20;\nlet seed = 1222;\n\n// tslint:disable-next-line:typedef\nfunction getFakeVehicle() {\n  seed += 1;\n  faker.seed(seed);\n\n  return {\n    color: faker.vehicle.color(),\n    fuel: faker.vehicle.fuel(),\n    manufacturer: faker.vehicle.manufacturer(),\n    model: faker.vehicle.model(),\n    type: faker.vehicle.type(),\n    vehicle: faker.vehicle.vehicle() ,\n    vin: faker.vehicle.vin(),\n\n    post: {\n      slug: faker.helpers.slugify(faker.name.title()),\n      protocol: faker.internet.protocol(),\n    },\n\n    cost: {\n      account: faker.finance.account(),\n      accountName: faker.finance.accountName(),\n      amount: faker.finance.amount(),\n      currencyCode: faker.finance.currencyCode(),\n    },\n  };\n}\n\nexport const MOCK_VEHICLES = new Array(count).fill(0).map(getFakeVehicle);\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { Car } from '../model'\nimport { MOCK_VEHICLES } from '../mocks'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarService {\n\n  constructor() { }\n\n  getVechicles(): Observable<Car[]> {\n    return of(MOCK_VEHICLES).pipe(\n      delay(2000),\n    );\n}\n}\n","import { ChangeHttp } from './http-car.directive';\n\nexport const appDirectives = [\n  ChangeHttp\n];\n\nexport * from './http-car.directive';\n","import { ThrowStmt } from '@angular/compiler';\nimport { Component } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { Car } from './model';\nimport { CarService } from './services/car.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  areUsersLoading: boolean = false;\n  cars: Car[] = [];\n\n  constructor(private carService: CarService) {\n\n  this.getCars();\n\n  }\n\n  private getCars(): void {\n    this.areUsersLoading = true;\n    this.carService.getVechicles()\n    .pipe(finalize(() => this.areUsersLoading = false))\n    .subscribe((cars) => {\n      this.cars = cars;\n    })\n  }\n\n}\n","<link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap\" rel=\"stylesheet\">\n<mat-spinner *ngIf=\"areUsersLoading\" style=\"margin: auto; margin-top: 10%;\"></mat-spinner>\n<ul *ngIf=\"!areUsersLoading\">\n  <li *ngFor=\"let car of cars\" class=\"mat-subheading-2\">\n    <a http href=\"{{ car | carLink }}\">\n    <span>\n      Added from {{ car.post.protocol }}\n    </span>\n      <br>\n    Vehicle: {{ car | infoCar }}\n      <br>\n    Price: {{car.cost.amount | currency: car.cost.currencyCode:'symbol-narrow'}}\n    </a>\n  </li>\n</ul>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { appServices } from './services';\nimport { InfoCarPipe } from './pipes';\nimport { CarLinkPipe } from './pipes';\nimport { ChangeHttp } from './directives';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InfoCarPipe,\n    ChangeHttp,\n    CarLinkPipe,\n  ],\n\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n  ],\n\n  providers: [...appServices],\n\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Car } from '../model';\n\n@Pipe({\n  name: 'carLink'\n})\nexport class CarLinkPipe implements PipeTransform {\n\n  transform(car: Car): string {\n    return `https://www.google.com/search?q= + ${encodeURIComponent(car.vehicle)}`\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Car } from '../model';\n\n@Pipe({\n  name: 'infoCar'\n})\n\nexport class InfoCarPipe implements PipeTransform {\n\n  transform(car: Car): string {\n    return `${car.manufacturer} - ${car.model}  (${car.fuel})`\n  }\n\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[http]'\n})\n\nexport class ChangeHttp implements AfterViewInit {\n  constructor(private element: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    if (this.element.nativeElement.firstChild.innerText === 'Added from http') {\n      this.element.nativeElement.firstChild.style.color = 'red';\n      this.element.nativeElement.style.pointerEvents = 'none'\n    }\n  }\n}\n\n","import { CarService } from './car.service'\n\nexport const appServices = [\n  CarService,\n];\n\nexport * from './car.service';\n","import { CarLinkPipe } from './car-link.pipe';\nimport { InfoCarPipe } from './info-car.pipe';\n\nexport const AppPipes = [\nCarLinkPipe,\nInfoCarPipe,\n];\n\nexport * from './car-link.pipe';\nexport * from './info-car.pipe';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}