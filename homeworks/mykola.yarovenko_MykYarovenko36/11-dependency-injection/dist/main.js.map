{"version":3,"sources":["./src/app/mock-wehicle/mock-wehicle.component.ts","./src/app/mock-wehicle/mock-wehicle.component.html","./src/environments/environment.ts","./src/app/mocks/vechicles.mock.ts","./src/app/directives/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pipes/transform-adress.pipe.ts","./src/app/app.module.ts","./src/app/services/cars.service.ts","./src/app/services/index.ts","./src/app/pipes/index.ts","./src/app/directives/link-clicked.directive.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Mock_Vehicles } from '../models/vehicles';\nimport { TransformAdressPipe } from '../pipes';\n\n@Component({\n  selector: 'app-mock-wehicle',\n  templateUrl: './mock-wehicle.component.html',\n  styleUrls: ['./mock-wehicle.component.scss']\n})\nexport class MockWehicleComponent implements OnInit {\n  @Input() car!: Mock_Vehicles;\n  subscribeURL!: string;\n  carItem !: Mock_Vehicles;\n\n  constructor(private transformAdressPipe: TransformAdressPipe) {\n  }\n\n  ngOnInit(): void {\n    this.carItem = this.car;\n    this.subscribeURL = this.transformAdressPipe.transform(`${this.carItem.manufacturer}+${this.carItem.model}`);\n  }\n}\n","<div class=\"card\">\n  <p >{{carItem.post.slug}}</p>\n      <a [href]=\"subscribeURL\" [protocol]=\"carItem.post.protocol\">\n          <p>{{carItem.manufacturer}} - {{carItem.model}} ({{carItem.fuel}})</p>\n      </a>\n  <p>{{carItem.cost.amount}} + {{carItem.cost.currencyCode}}</p>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import * as faker from 'faker';\r\n\r\n\r\nconst count = 20;\r\nlet seed = 1222;\r\n\r\n// tslint:disable-next-line:typedef\r\nfunction getFakeVehicle() {\r\n  seed += 1;\r\n  faker.seed(seed);\r\n\r\n  return {\r\n    color: faker.vehicle.color(),\r\n    fuel: faker.vehicle.fuel(),\r\n    manufacturer: faker.vehicle.manufacturer(),\r\n    model: faker.vehicle.model(),\r\n    type: faker.vehicle.type(),\r\n    vehicle: faker.vehicle.vehicle(),\r\n    vin: faker.vehicle.vin(),\r\n\r\n    post: {\r\n      slug: faker.helpers.slugify(faker.name.title()),\r\n      protocol: faker.internet.protocol(),\r\n    },\r\n\r\n    cost: {\r\n      account: faker.finance.account(),\r\n      accountName: faker.finance.accountName(),\r\n      amount: faker.finance.amount(),\r\n      currencyCode: faker.finance.currencyCode(),\r\n    },\r\n  };\r\n}\r\n\r\nexport const MOCK_VEHICLES = new Array(count).fill(0).map(getFakeVehicle);\r\n","import { LinkClicked } from './link-clicked.directive';\r\n\r\nexport const appDirectives = [\r\n  LinkClicked,\r\n];\r\nexport * from './link-clicked.directive';\r\n","import { Component } from '@angular/core';\n\nimport { delay } from 'rxjs/operators';\nimport { Mock_Vehicles } from './models/vehicles';\nimport { CarsService } from './services';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    cars: Mock_Vehicles[] = [];\n    itemData: boolean = false;\n    isLoading: boolean = true;\n    constructor (private carsServices: CarsService) {\n        this.getCars();\n    }\n    private getCars(): void {\n        this.carsServices.getCars().pipe(\n          delay(2000),\n          ).subscribe(\n                (arg : Mock_Vehicles[]) => {\n                    this.cars = arg;\n                    this.itemData = true;\n                    this.isLoading = false;\n                });\n    }\n}\n","<div>\n    <div *ngIf=\"isLoading\"> Loading...</div>\n    <div *ngIf=\"!isLoading\">\n        <div *ngIf=\"itemData; else itemError\">\n          <app-mock-wehicle\n              *ngFor=\"let item of cars\"\n              [car]=\"item\"\n          >\n         </app-mock-wehicle>\n        </div>\n        <ng-template #itemError>\n            <p>Something went wrong! try again later</p>\n        </ng-template>\n    </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'transformAdressPipe'\r\n})\r\n\r\nexport class TransformAdressPipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    return  `https://www.google.com/search?q=${value}`;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { appServices } from './services';\nimport { appDirectives } from './directives';\nimport { appPipes } from './pipes';\nimport { MockWehicleComponent } from './mock-wehicle/mock-wehicle.component';\n\n@NgModule({\n    declarations: [\n      AppComponent,\n      MockWehicleComponent,\n      ...appDirectives,\n      ...appPipes,\n    ],\n    imports: [\n      BrowserModule,\n      AppRoutingModule\n    ],\n    providers: [\n      ...appServices,\n      ...appPipes,\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { MOCK_VEHICLES } from '../mocks/vechicles.mock';\r\nimport { Mock_Vehicles } from '../models/vehicles';\r\n\r\n@Injectable()\r\nexport class CarsService {\r\n  constructor() {}\r\n\r\n  getCars(): Observable<Mock_Vehicles[]> {\r\n    return of(MOCK_VEHICLES);\r\n  }\r\n}\r\n","import { CarsService } from './cars.service';\r\n\r\nexport const appServices = [\r\n  CarsService,\r\n];\r\n\r\nexport * from './cars.service';\r\n","import { TransformAdressPipe } from './transform-adress.pipe';\r\n\r\nexport const appPipes = [\r\n  TransformAdressPipe,\r\n];\r\n\r\nexport * from './transform-adress.pipe';\r\n","import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\r\n\r\n@Directive({ selector: '[protocol]' })\r\n\r\nexport class LinkClicked implements AfterViewInit {\r\n\r\n  @Input() protocol!: string;\r\n  constructor (private el: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.protocol === 'https' ? this.el.nativeElement.style.color = \"red\" : this.el.nativeElement.style.color = \"green\";\r\n   }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}