{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginForm } from './models/login-form';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  nameControl!: FormControl;\n  passControl!: FormControl;\n  rememberControl!: FormControl;\n  formGroupData!: FormGroup;\n  formIsDisabled: boolean = true;\n  formIsRememberd!: boolean;\n  formFields!: LoginForm;\n  login = '';\n  password = '';\n\n  ngOnInit() {\n    let item = localStorage.getItem('loginParams');\n    item === null?  (this.setLoginForm(), this.formIsRememberd = true) : (this.getLoginFormData(item), this.setLoginForm(), this.formIsRememberd = true, this.formIsDisabled = false);\n  }\n\n  setLoginForm() {\n      this.formGroupData = new FormGroup({\n          login: new FormControl(this.login, [\n            Validators.email,\n            Validators.required]),\n          password: new FormControl(this.password, [\n            Validators.required,\n            Validators.minLength(5),\n          ]),\n      });\n      this.formGroupData.statusChanges.subscribe(\n          (status): void => {\n              status === 'INVALID'? this.formIsDisabled = true :\n              this.formIsDisabled = false;\n          });\n      this.formGroupData.valueChanges.subscribe(\n          (value) => {\n              this.formFields = value;\n          }\n      );\n  }\n\n  public setLoginFormData(): void {\n      const formData = {\n        item: btoa(this.formFields.login),\n        key: btoa(this.formFields.password)\n      }\n      const message = `Your login is saved. login-name: ${this.formFields.login}, password: ${this.formFields.password}`;\n      this.formIsRememberd? (localStorage.setItem('loginParams', JSON.stringify(formData)),\n      alert(message)) : alert(message);\n  }\n\n  private getLoginFormData(item: string): void {\n      const savedForm = JSON.parse(item);\n      this.login = atob(savedForm.item);\n      this.password = atob(savedForm.key);\n  }\n}\n\n","<div class=\"form-wrapper\">\n<fieldset [formGroup]=\"formGroupData\">\n  <p class=\"form-item\">\n    <span>login:</span>\n    <input\n      type=\"text\"\n      placeholder=\"example@mail.com\"\n      formControlName=\"login\">\n  </p>\n  <p class=\"form-item\">\n    <span>password:</span>\n    <input\n      type=\"password\"\n      placeholder=\"password from any 5\"\n      formControlName=\"password\"\n    >\n  </p>\n</fieldset>\n<hr>\n    <button\n      type=\"submit\"\n      (click)=\"setLoginFormData()\"\n      [disabled]=\"formIsDisabled\">SIGN IN</button>\n    <p>remember me ?\n    <input\n      type=\"checkbox\"\n      [(ngModel)]=\"formIsRememberd\"\n    ></p>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}