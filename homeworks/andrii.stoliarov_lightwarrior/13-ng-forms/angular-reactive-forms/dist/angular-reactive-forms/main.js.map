{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  form: any;\n  private encodedDataEmail: string = '';\n  private decodedDataEmail: string = '';\n  private encodedDataPassword: string = '';\n  private decodedDataPassword: string = '';\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: new FormControl('', [\n        Validators.email,\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ]),\n      checkbox: new FormControl(false, [\n        Validators.required\n      ])\n    });\n\n    const getLocalStorageEmail: string = localStorage.getItem('email') || '';\n    const getLocalStoragePassword: string = localStorage.getItem('password') || '';\n\n    this.decodedDataEmail = window.atob(getLocalStorageEmail);\n    this.decodedDataPassword = window.atob(getLocalStoragePassword);\n\n    this.form.patchValue({\n      email: this.decodedDataEmail,\n      password: this.decodedDataPassword\n    });\n  }\n\n  isInvalidAndTouched(fieldName: string): boolean {\n    return (this.form.get(fieldName).invalid && this.form.get(fieldName).touched);\n  }\n\n  isRequired(fieldName: string): boolean {\n    return this.form.get(fieldName).errors.required;\n  }\n\n  isErrors(fieldName: string): boolean {\n    return this.form.get(fieldName).errors.email;\n  }\n\n  submit() {\n    if (this.form.invalid) return;\n\n    const formData = {...this.form.value};\n\n    alert(`Login successfully. Email: ${formData.email}, password: ${formData.password}`)\n\n    if (formData.checkbox) {\n      this.encodedDataEmail = window.btoa(formData.email);\n      this.encodedDataPassword = window.btoa(formData.password);\n\n      localStorage.setItem('email', this.encodedDataEmail);\n      localStorage.setItem('password', this.encodedDataPassword);\n    }\n\n   this.form.reset();\n  }\n\n}\n","<div class=\"container\">\n  <h1>Angular reactive forms</h1>\n\n  <form class=\"form-container\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <div class=\"form-control\">\n      <label for=\"emailCaption\">Email: </label>\n      <input id=\"emailCaption\" class=\"field-input\" type=\"text\" placeholder=\"enter email\" formControlName=\"email\">\n      <div\n        *ngIf=\"isInvalidAndTouched('email')\"\n        class=\"validation\"\n      >\n        <small *ngIf=\"isRequired('email')\">\n          The field cannot be empty.\n        </small>\n        <small *ngIf=\"isErrors('email')\">\n          Enter correct email.\n        </small>\n      </div>\n    </div>\n\n    <div class=\"form-control\">\n      <label for=\"passwordCaption\">Password: </label>\n      <input id=\"passwordCaption\" class=\"field-input\" type=\"password\" placeholder=\"enter password\" formControlName=\"password\">\n      <div\n        *ngIf=\"isInvalidAndTouched('password')\"\n        class=\"validation\"\n      >\n        <small *ngIf=\"isRequired('password')\">\n          The field cannot be empty.\n        </small>\n    </div>\n    </div>\n\n    <div class=\"form-control\">\n      <input type=\"checkbox\" formControlName=\"checkbox\">\n      <label> remember me</label>\n    </div>\n\n    <button class=\"btn\" type=\"submit\" [disabled]=\"form.invalid\">Login</button>\n  </form>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}