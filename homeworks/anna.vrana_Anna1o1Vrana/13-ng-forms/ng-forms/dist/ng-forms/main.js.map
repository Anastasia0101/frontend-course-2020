{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'ng-forms';\n  authorizationForm = new FormGroup({\n    email: new FormControl('',\n      [Validators.required,\n        Validators.email]),\n    password: new FormControl('',\n      [Validators.required,\n        Validators.pattern(/[A-z]/)]\n    ),\n    checkbox: new FormControl()\n  })\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.authorizationForm.controls[controlName];\n    return control.invalid && control.touched;\n  }\n\n  saveInLocalStorage(): void {\n    let email = btoa(`${this.authorizationForm.value.email}`)\n    let password = btoa(`${this.authorizationForm.value.password}`)\n    let checkbox = btoa(`${this.authorizationForm.value.checkbox}`)\n    localStorage.setItem('email', email)\n    localStorage.setItem('password', password)\n    localStorage.setItem('checkbox', checkbox)\n\n    console.log(localStorage.getItem('email'))\n    console.log(localStorage.getItem('password'))\n  }\n\n  onSubmit(): void {\n    const authorizationData = 'Login: ' + `${this.authorizationForm.value.email}` + '     Password: ' + `${this.authorizationForm.value.password}`;\n    if (this.authorizationForm.value.checkbox === true) {\n      console.log('remembered')\n      this.saveInLocalStorage()\n      alert(authorizationData)\n    } else {\n      alert(authorizationData)\n    }\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('email') && localStorage.getItem('password')) {\n      this.authorizationForm.setValue(\n        {\n          'email': atob(localStorage.getItem('email')),\n          'password': atob(localStorage.getItem('password')),\n          'checkbox': atob(localStorage.getItem('checkbox'))\n        })\n    }\n  }\n}\n","<form [formGroup]=\"authorizationForm\"\n      (ngSubmit)=\"onSubmit()\"\n      class=\"authorization-form\">\n  <div class=\"login-block\">\n    <label for=\"email\"> Email:\n      <input\n        formControlName=\"email\"\n        required\n        type=\"email\"\n        id=\"email\"\n        class=\"input-field\"\n        placeholder=\"enter email\">\n    </label>\n    <div *ngIf=\"isControlInvalid('email')\"\n         class=\"alert-danger\">\n      * Please, enter valid email address\n    </div>\n  </div>\n  <div class=\"password-block\">\n    <label for=\"password\">Password:\n      <input\n        formControlName=\"password\"\n        required\n        type=\"password\"\n        id=\"password\"\n        class=\"input-field\"\n        placeholder=\"enter password\">\n    </label>\n    <div *ngIf=\"isControlInvalid('password')\"\n         class=\"alert-danger\">\n      * Please, enter valid password address\n    </div>\n  </div>\n\n  <label for=\"checkbox\">\n    Remember me\n    <input\n      formControlName=\"checkbox\"\n      type=\"checkbox\"\n      id=\"checkbox\"\n      class=\"checkbox\">\n  </label>\n  <button type=\"submit\" class=\"btn\" [disabled]=\"!authorizationForm.valid\">\n    Submit\n  </button>\n</form>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}